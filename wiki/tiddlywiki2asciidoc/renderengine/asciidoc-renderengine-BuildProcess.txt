== BuildProcess
:Author: Ichthyostega
:Date Created: 200706190658
:Date Changed: 200906071813
:Count Changes: 30
// dynamic Builder img

All decisions on _how_ the RenderProcess has to be carried out are concentrated in this rather complicated Builder Subsystem. The benefit of this approach is, besides decoupling of subsystems, to keep the actual performance-intensive video processing code as simple and transparent as possible. The price, in terms of increased complexity -- to pay in the Builder -- can be handled by making the Build Process generic to a large degree. Using a Design By Contract approach we can decompose the various decisions into small decision modules without having to trace the actual workings of the Build Process as a whole.

image::../uml/fig129413.png["Outline of the Build Process"]

The building itself will be broken down into several small tool application steps. Each of these steps has to be mapped to the MObjects found on the <<renderengine-Timeline,Timeline>>. Remember: the idea is that the so called +<<renderengine-Fixture,Fixture>>+ contains only <<renderengine-ExplicitPlacement,ExplicitPlacement>>s which in turn link to MObjects like Clips, Effects and <<renderengine-Automation,Automation>>. So it is sufficient to traverse this list and map the build tools to the elements. Each of these build tools has its own state, which serves to build up the resulting Render Engine. So far I see two steps to be necessary:

* find the +Segments+, i.e. the locations where the overall configuration changes
* for each segment: generate a ProcNode for each found MObject and wire them accordingly

Note, _we still have to work out how exactly building, rendering and playback work_ together with the backend-design. The build process as such doesn't overly depend on these decisions. It is easy to reconfigure this process. For example, it would be possible as well to build for each frame separately (as Cinelerra2 does), or to build one segment covering the whole timeline (and handle everything via <<renderengine-Automation,Automation>>

-> see also: <<renderengine-Builder,Builder Overview>>
-> see also: BasicBuildingOperations
-> see also: BuilderStructures
-> see also: BuilderMechanics
-> see also: PlanningBuildFixture
-> see also: PlanningSegementationTool
-> see also: PlanningNodeCreatorTool

image::../uml/fig128517.png["Colaborations in the Build Process"]