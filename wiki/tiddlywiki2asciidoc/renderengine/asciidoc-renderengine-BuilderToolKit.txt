== BuilderToolKit
:Author: Ichthyostega
:Date Created: 200805210308
:Date Changed: 200806211539
:Count Changes: 12
// impl Builder

Besides the primary working tool within the builder (namely the <<renderengine-PlanningNodeCreatorTool,Node Creator Tool>>), on a lower level, we encounter several <<renderengine-BuilderPrimitives,elementary building situations>> -- and for each of these elementary situations we can retrieve a suitable 'fitting tool' or <<renderengine-BuilderMould,mould>>. The palette of these moulds is called the *tool kit* of the builder. It is subject to configuration by rules.


=== addressing a mould
All mould instances are owned and managed by the <<renderengine-BuilderToolFactory,tool factory>>, and can be referred to by their type (PipeMould, CombiningMould, SourceChainMould, WiringMould) and a concrete object instance (of suitable type). The returned mould (instance) acts as a handle to stick together the given object instance (from the high-level model) with the corresponding point in the low-level node network under construction. As consequence of this approach, the tool factory instance holds a snapshot of the current building state, including all the active spots in the build process. As the latter is driven by objects from the high-level model appearing (in a sensible order  -> see BuilderMechanics) within the NodeCreatorTool, new moulds will be created and fitted as necessary, and existing moulds will be exhausted when finished, until the render node network is complete.

=== configuring a mould
As each mould kind is different, it has a +prepare(...)+ function with suitably typed parameters. The rest is intended to be  self-configuring (for example, a CombiningMould will detect the actual kind of Transition and select the internal mode of operation), so that it's sufficient to just call +operate()+

=== sequence of operations
When +operate()+ doesn't throw, the result is a list of _successor moulds_ -- you shouldn't use the original mould after triggering its operation, because it may have been retracted as a result and reused for another purpose by the tool factory. It is not necessary to store these resulting moulds either (as they can be retrieved as described above), but they can be used right away for the next building step if applicable. In the state they are returned from a successful building step (mould operation = execution of a contained <<renderengine-ProcPatt,processing pattern>>), they are usually already holding a reference to the part of the network just created and need to be configured only with the next high-level object (effect, placement, pipe, processing pattern or similar, depending on the concrete situation) in order to carry out the next step.

=== single connection step
at the lowest level within the builder there is the step of building a _connection._ This step is executed by the processing pattern with the help of the mould. Actually, making such a connection is more complicated, because in the standard case it will connect N media streams simultaneously (N=2 for stereo sound or 3D video, N=6 for 5.1 Surround, N=9 for 2nd order Ambisonics). These details are encapsulated within the OperationPoint, which is provided by the mould and exhibits a common interface for the processing pattern to express the connecting operation.

-> see also: BuilderPrimitives for the elementary working situations corresponding to each of these <<renderengine-BuilderMould,builder moulds>>
