== Data Backend
:Author: CehTeh
:Date Created: 200706192251
:Date Changed: 200706271504
:Count Changes: 6

.This just starts as braindump, I will refine it soon
* handle all files Lumiera uses at runtime (media, edl, temp data)
* manage filehandles, Lumiera might use more more files than available filehandles
* manage temporary data
* do caching
* io will be blocked where the backend tells the core where it can expect the data (not read()/write() like)
* kind-of garbage collector
* do prefetching
* no/low latency for the core the prefetcher and other things ensure that data is available in time
* translate any input into a format which the Lumiera core understands (demux, decode)
* same for encoding to output formats
* offer a plugin API for encoders/decoders
* maybe network backend for serving data to distributed render nodes
* can do some load control or management (trigger adaptive rendering if system is idle etc)
* pull based arch
* Serialize persistent data (Project / EDL's)

Look at <<backend-overview, overview>> for the current design proposal