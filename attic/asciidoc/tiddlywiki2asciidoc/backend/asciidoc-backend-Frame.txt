== Frame
:Author: CehTeh
:Date Created: 200706202115
:Date Changed: 200706271506
:Count Changes: 13

+Frames+ are the smallest datablocks handled by the Backend. The application tells the +Backend+ to make <<backend-File, +File+>>s available and then only requests Frames from the Backend. All other datastructures of the backend are private.

Actually Frames are (references to) blocks of continuous memory. They can be anything depending on the usage of the +File+ (Video frames, encoder frames, blocks of sound samples).

Each +Frame+ points to a <<backend-FrameDescriptor, +FrameDescriptor+>> which describes the shared properties of ++Frame++s of the same kind. For video frames this +FrameDescriptor+ will define the policies of the used color model, resolution, aspect ratio and so on, for example.

Frames are referenced by a smart-pointer like object which manages the lifetime and caching behavior. There are 3 states such a frame reference can be in:

. readonly: the backing <<backend-FileMap, +FileMap+>> is checked out from the aging list, frames can be read
. readwrite: the backing +FileMap+ is checked out from the aging list, frames can be read and written (depends on the filemode as well)
. weak: the +FileMap+ object is checked back into the aging list, the frame can't be accessed but we can try to transform a weak reference into a readonly or readwrite reference

Frames can be addressed uniquely (needs to be worked out) whenever a frame is not available. The backend can initiate a (probably recursive) render for it.

Accessing ++Frame++s may add further renderjobs for related frames to the <<backend-Prefetch, +Prefetch+>> task.

