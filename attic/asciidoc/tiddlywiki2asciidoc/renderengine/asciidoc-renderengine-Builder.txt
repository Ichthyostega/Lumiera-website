== Builder
:Author: Ichthyostega
:Date Created: 200706220317
:Date Changed: 200810170221
:Count Changes: 28
// def overview

The Builder takes some MObject/<<Placement,Placement>> information (called Timeline) and generates out of this a Render Engine configuration able to render this Objects. It does all decisions and retrieves the current configuration of all objects and plugins, so the Render Engine can just process them stright forward.

The Builder is the central part of the http://en.wikipedia.org/wiki/Builder_pattern[Builder Pattern]

As the builder has to create a render node network implementing most of the features and wiring possible with the various MObject kinds and placement types, it is a rather complicated piece of software. In order to keep it manageable, it is broken down into several specialized sub components:

* clients access builder functionality via the BuilderFacade
* the <<renderengine-Controller,Proc-Layer-Controller>> initiates the BuildProcess and does the overall coordination of scheduling edit operations, rebuilding the fixture and triggering the Builder
* to carry out the building, we use several primary tools (SegmentationTool, NodeCreatorTool,...),  together with a BuilderToolKit to be supplied by the <<renderengine-BuilderToolFactory,tool factory>>
* _operating the Builder_ can be viewed at from two different angles, either emphasizing the <<renderengine-BasicBuildingOperations,basic building operations>> employed to assemble the render node network, or focussing rather at the <<renderengine-BuilderMechanics,mechanics>> of cooperating parts while processing.
* besides, we can identify a small set of elementary situations we call <<renderengine-BuilderPrimitives,builder primitives>>, to be covered by the mentioned BuilderToolKit; by virtue of <<renderengine-ProcPatt,processing patterns>> they form an <<renderengine-BuilderRulesInterface,interface to the rule based configuration>>.
* the actual building (i.e. the application of tools to the timeline) is done by the <<renderengine-BuilderAssembler,Assembler>>, which is basically a collection of functions (but has a small amount of global configuration state)
* any non-trivial wiring of render nodes, tracks, pipes and <<renderengine-Automation,automation>> is done by the services of the <<renderengine-ConManager,connection manager>>

