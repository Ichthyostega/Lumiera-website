Lumiera 2019 Development Report
===============================
:Date: Autumn 2019
:Author: Benny Lyons & Hermann Vo√üeler
:toc:

//Menu: label 19-09 Dev Report


.Introduction
We review the status of the project here.  Traditionally, we present _our_, i.e.,
that of team members, view of the project.  However, from another perspective,
we provide some comments on Lumiera from another source: 
https://www.openhub.net/p/lumiera/[Openhub]:
 - Programming effort of about 30 years
 - 115,094 lines of code 
 - Rated with five stars by 4 people
 - 31% less activity in 2019

So why then less activity over the previous year?  _Ichthyo_ devoted a number of
months pursuing other activities which is reflected in the diminished activity.


Project Activity
----------------


Appropriate Nomenclature
~~~~~~~~~~~~~~~~~~~~~~~~
'What's in a name?' Juliet says to Romeo in the famous balcony scene of Romeo
and Juliet by Will Shakespeare. Indeed Martin Fowler (aka Uncle Bob) has
considerably more to say about the importance of selecting words to name things
in our code. Modern practice of programming has embraced these ideas and the
importance of this is now widespread.

We've spent considerable time in selecting appropriate vocabulary throughout the
project and we were always unhappy with two terms: _proc_ and _backend_. So
we've renamed these. The _proc_ layer is now known as the _steam_ layer, and the
_backend_ layer has been renamed to the _vault_ layer.

The old nomenclature was mis-leading and simply had to go.

We would, of course, be most delighted to hear any comments (or objections) you
might like to make, for example, on our https://www.lumiera.org/contribute.html[mailing list]. 


The Timeline View
~~~~~~~~~~~~~~~~~
The Timeline View has received some developer attention.

Recall that the Timeline is a time axis with one or more outputs. Each
output can have its own configuration. Sequences can then be attached to the
timeline.

The timeline obviously features on the stage (i.e., formally known as the GUI)
and is without a fixed structure. Fixing the structure of the Timeline would not
be a good idea as the structure of the Timeline is individual and thereby should
be in the user domain, i.e., user configurable.
Implementing such a feature is time consuming and complex, but though must be
devoted to its implementation earlier rather than later in the project.

It is possible to start Lumiera and view the Timeline on the GUI.


Status of Support for C++17
~~~~~~~~~~~~~~~~~~~~~~~~~~~
We currently support compiling with C++14. Out next objective is to compile with
C++17. We have begun initial work on migrating to compiling with C++17.
